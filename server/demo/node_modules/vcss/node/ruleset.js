"use strict";

var _inherits = function (child, parent) {
  child.prototype = Object.create(parent && parent.prototype, {
    constructor: {
      value: child,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (parent) child.__proto__ = parent;
};

var _interopRequire = function (obj) {
  return obj && (obj["default"] || obj);
};

var Block = _interopRequire(require("./block"));

var Ruleset = function Ruleset(sel, decs) {
  this.sel = sel;
  this.decs = decs;
};

_inherits(Ruleset, Block);

Ruleset.prototype.serialize = function () {
  var decs = this.decs;
  var str = "";
  for (var key in decs) {
    if (str.length) str += ";";
    str += "" + key + ":" + decs[key];
  }
  return "" + this.sel + "{" + str + "}";
};

module.exports = Ruleset;

