"use strict";

var _slice = Array.prototype.slice;
var _interopRequire = function (obj) {
  return obj && (obj["default"] || obj);
};

var Node = _interopRequire(require("./node"));

var Text = _interopRequire(require("./text"));

var Style = _interopRequire(require("./style"));

var Element = _interopRequire(require("./element"));

var parse = _interopRequire(require("./parse"));

exports = module.exports = build;
exports.Node = Node;
exports.Text = Text;
exports.Element = Element;
exports.Style = Style;
exports.style = style;


function build(sel) {
  var children = _slice.call(arguments, 1);

  var _ref = parse(sel);

  var tag = _ref.tag;
  var attrs = _ref.attrs;
  var el = new Element(tag);

  if (isProperties(children[0])) {
    var props = children.shift();
    for (var i in props) {
      if ("class" == i && null != attrs["class"]) {
        // special case `class` to append
        // if present through tag
        attrs["class"] += " " + props["class"];
      } else {
        attrs[i] = props[i];
      }
    }
  }

  if (attrs) el.set(attrs);
  if (children) el.add(children);

  return el;
}

// differentiates plain object from children
function isProperties(obj) {
  return obj && "object" == typeof obj && !Array.isArray(obj) && !(obj instanceof Node);
}

// style helper
function style() {
  return new Style();
}

