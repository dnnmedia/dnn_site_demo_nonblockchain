!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.xdom=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

var _slice = Array.prototype.slice;
var _inherits = function (child, parent) {
  child.prototype = Object.create(parent && parent.prototype, {
    constructor: {
      value: child,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (parent) child.__proto__ = parent;
};

var _interopRequire = function (obj) {
  return obj && (obj["default"] || obj);
};

var Text = _interopRequire(require("./text"));

var Node = _interopRequire(require("./node"));

var voidElements = _interopRequire(require("void-elements"));

var flatten = _interopRequire(require("array-flatten"));

var voidTags = new Set(voidElements);

var Element = function Element(tagName, isVoid) {
  this.name = tagName;
  this.props = new Map();
  this.children = [];
  if (null != isVoid) {
    this["void"] = isVoid;
  } else {
    this["void"] = voidTags.has(tagName);
  }
};

_inherits(Element, Node);

Element.prototype.add = function () {
  var _this = this;
  var children = _slice.call(arguments);

  flatten(children).filter(function (v) {
    return null != v && "boolean" != typeof v;
  }).map(function (v) {
    if ("string" == typeof v || "number" == typeof v) {
      return new Text(String(v));
    } else {
      return v;
    }
  }).forEach(function (v) {
    _this.children.push(v);
  });
  return this;
};

Element.prototype.empty = function () {
  this.children = [];
  return this;
};

Element.prototype.remove = function (child) {
  this.children = this.children.filter(function (v) {
    return v == child;
  });
  return this;
};

Element.prototype.set = function (prop, value) {
  if ("object" == typeof prop) {
    for (var key in prop) {
      this.set(key, prop[key]);
    }
  } else {
    if ("text" == prop) {
      this.add(null == value ? "" : value);
    } else {
      this.props.set(prop, value);
    }
  }
  return this;
};

Element.prototype.toHTML = function () {
  var tag = this.name.toLowerCase();
  var html = "<" + tag;

  // attributes
  this.props.forEach(function (val, key) {
    html += " " + key + "=" + JSON.stringify(val);
  });

  html += ">";

  // children
  var contentLength = 0;
  this.children.forEach(function (el) {
    var _add = el.toHTML();
    contentLength += _add.length;
    html += _add;
  });

  // closing
  if (contentLength || !this["void"]) {
    html += "</" + tag + ">";
  }

  return html;
};

module.exports = Element;

},{"./node":3,"./text":6,"array-flatten":7,"void-elements":15}],2:[function(require,module,exports){
"use strict";

var _slice = Array.prototype.slice;
var _interopRequire = function (obj) {
  return obj && (obj["default"] || obj);
};

var Node = _interopRequire(require("./node"));

var Text = _interopRequire(require("./text"));

var Style = _interopRequire(require("./style"));

var Element = _interopRequire(require("./element"));

var parse = _interopRequire(require("./parse"));

exports = module.exports = build;
exports.Node = Node;
exports.Text = Text;
exports.Element = Element;
exports.Style = Style;
exports.style = style;


function build(sel) {
  var children = _slice.call(arguments, 1);

  var _ref = parse(sel);

  var tag = _ref.tag;
  var attrs = _ref.attrs;
  var el = new Element(tag);

  if (isProperties(children[0])) {
    var props = children.shift();
    for (var i in props) {
      if ("class" == i && null != attrs["class"]) {
        // special case `class` to append
        // if present through tag
        attrs["class"] += " " + props["class"];
      } else {
        attrs[i] = props[i];
      }
    }
  }

  if (attrs) el.set(attrs);
  if (children) el.add(children);

  return el;
}

// differentiates plain object from children
function isProperties(obj) {
  return obj && "object" == typeof obj && !Array.isArray(obj) && !(obj instanceof Node);
}

// style helper
function style() {
  return new Style();
}

},{"./element":1,"./node":3,"./parse":4,"./style":5,"./text":6}],3:[function(require,module,exports){
"use strict";

var Node = function Node() {};

module.exports = Node;

},{}],4:[function(require,module,exports){
"use strict";

module.exports = parse;
// parses:
// <a href="#">
// a href="#" title=woot
// div.main
// div.left.red
// div.left.red class=woot
// .left.red

function parse(str) {
  var pieces = str.replace(/^</, "").replace(/>$/, "").split(/\s+/);

  var _ref = parseTag(pieces.shift());

  var tag = _ref.tag;
  var classes = _ref.classes;
  var attrs = parseAttrs(pieces.join(" "));

  // merge classes
  if (classes.length || null != attrs["class"]) {
    attrs["class"] = classes.join(" ") + (null == attrs["class"] ? "" : attrs["class"]);
  }

  return { tag: tag, attrs: attrs };
}

function parseTag(str) {
  var ret = {};
  var tag = str.match(/^[^\.]+/);
  var classes = str.match(/\.([^\.]+)/g);

  // defaults
  tag = tag ? tag[0] : "div";
  classes = classes || [];

  // remove leading `.`
  classes = classes.map(function (v) {
    return v.substr(1);
  });

  return { tag: tag, classes: classes };
}

function parseAttrs(str) {
  var attrs = {};
  var key = undefined, val = undefined, stop = undefined;

  for (var i = 0; i < str.length; i++) {
    var chr = str[i];

    if (null == val) {
      // accumulating key
      if (null == key) key = "";
      if ("=" == chr) {
        val = "";
      } else if (/\s/.test(chr)) {
        if (key.length) {
          attrs[key] = true;
          key = null;
        }
      } else {
        key += chr;
      }
    } else {
      // accumulating value
      var stopped = undefined;

      if (!stop) {
        if (/['"]/.test(chr)) {
          stop = new RegExp(chr);
        } else {
          stop = /\s/;
          val += chr;
        }
      } else {
        stopped = stop.test(chr);
        if (!stopped) val += chr;
      }

      if (stopped || i + 1 == str.length) {
        attrs[key] = val;
        key = val = stop = null;
      }
    }
  }

  // use `true` for missing values
  if (null != key) attrs[key] = true;

  return attrs;
}

},{}],5:[function(require,module,exports){
"use strict";

var _slice = Array.prototype.slice;
var _toArray = function (arr) {
  return Array.isArray(arr) ? arr : Array.from(arr);
};

var _inherits = function (child, parent) {
  child.prototype = Object.create(parent && parent.prototype, {
    constructor: {
      value: child,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (parent) child.__proto__ = parent;
};

var _interopRequire = function (obj) {
  return obj && (obj["default"] || obj);
};

var Sheet = _interopRequire(require("vcss"));

var Text = _interopRequire(require("./text"));

var Element = _interopRequire(require("./element"));

var Style = function Style() {
  var _this = this;
  Element.call(this, "style");

  this.sheet = new Sheet();

  {
    var text = new Text();
    text.value = function () {
      return _this.sheet.serialize();
    };
    this.children.push(text);
  }
};

_inherits(Style, Element);

Style.prototype.add = function () {
  var props = _slice.call(arguments);

  this.sheet.add.apply(this.sheet, _toArray(props));
  return this;
};

Style.prototype.remove = function (dec) {
  this.sheet.remove(dec);
  return this;
};

Style.prototype.anim = function (name, frames) {
  return this.sheet.anim(name, frames);
};

Style.prototype.media = function (params) {
  return this.sheet.media(params);
};

module.exports = Style;

},{"./element":1,"./text":6,"vcss":10}],6:[function(require,module,exports){
"use strict";

var _inherits = function (child, parent) {
  child.prototype = Object.create(parent && parent.prototype, {
    constructor: {
      value: child,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (parent) child.__proto__ = parent;
};

var _interopRequire = function (obj) {
  return obj && (obj["default"] || obj);
};

var Node = _interopRequire(require("./node"));

var Text = function Text(value) {
  this._value = value;
};

_inherits(Text, Node);

Text.prototype.value = function () {
  return this._value;
};

Text.prototype.toHTML = function () {
  return this.value();
};

module.exports = Text;

},{"./node":3}],7:[function(require,module,exports){
/**
 * Recursive flatten function. Fastest implementation for array flattening.
 *
 * @param  {Array}  array
 * @param  {Array}  result
 * @param  {Number} depth
 * @return {Array}
 */
var flatten = function (array, result, depth) {
  depth--;

  for (var i = 0; i < array.length; i++) {
    if (depth > -1 && Array.isArray(array[i])) {
      flatten(array[i], result, depth);
    } else {
      result.push(array[i]);
    }
  }

  return result;
};

/**
 * Flatten an array, with the ability to define a depth.
 *
 * @param  {Array}  array
 * @param  {Number} depth
 * @return {Array}
 */
module.exports = function (array, depth) {
  if (depth < 1) {
    return Array.prototype.slice.call(array);
  }

  return flatten(array, [], depth || Infinity);
};

},{}],8:[function(require,module,exports){
"use strict";

var _inherits = function (child, parent) {
  child.prototype = Object.create(parent && parent.prototype, {
    constructor: {
      value: child,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (parent) child.__proto__ = parent;
};

var _interopRequire = function (obj) {
  return obj && (obj["default"] || obj);
};

var Scope = _interopRequire(require("./scope"));

var prefixes = ["-webkit", "-moz", "-o"];

var Animation = function Animation(name, serializePrefixes) {
  if (serializePrefixes === undefined) serializePrefixes = true;
  Scope.call(this);
  this.name = name;
  this.serializePrefixes = serializePrefixes;
};

_inherits(Animation, Scope);

Animation.prototype.serialize = function () {
  var _this = this;
  var css = "@keyframes " + this.name + "{" + Scope.prototype.serialize.call(this) + "}";

  if (this.serializePrefixes) {
    prefixes.forEach(function (p) {
      css += "@" + p + "-keyframes " + _this.name + "{" + Scope.prototype.serialize.call(_this) + "}";
    });
  }

  return css;
};

module.exports = Animation;


},{"./scope":13}],9:[function(require,module,exports){
"use strict";

var Block = function Block() {};

module.exports = Block;


},{}],10:[function(require,module,exports){
"use strict";

var _interopRequire = function (obj) {
  return obj && (obj["default"] || obj);
};

var Sheet = _interopRequire(require("./sheet"));

var Block = _interopRequire(require("./block"));

var Scope = _interopRequire(require("./scope"));

var Media = _interopRequire(require("./media"));

var Animation = _interopRequire(require("./animation"));

var Ruleset = _interopRequire(require("./ruleset"));

exports = module.exports = Sheet;
exports.Block = Block;
exports.Scope = Scope;
exports.Media = Media;
exports.Animation = Animation;
exports.Ruleset = Ruleset;


},{"./animation":8,"./block":9,"./media":11,"./ruleset":12,"./scope":13,"./sheet":14}],11:[function(require,module,exports){
"use strict";

var _inherits = function (child, parent) {
  child.prototype = Object.create(parent && parent.prototype, {
    constructor: {
      value: child,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (parent) child.__proto__ = parent;
};

var _interopRequire = function (obj) {
  return obj && (obj["default"] || obj);
};

var Scope = _interopRequire(require("./scope"));

var Media = function Media(params) {
  Scope.call(this);
  this.params = params;
};

_inherits(Media, Scope);

Media.prototype.serialize = function () {
  return "@media " + this.params + " {\n  " + Scope.prototype.serialize.call(this) + "\n}";
};

module.exports = Media;


},{"./scope":13}],12:[function(require,module,exports){
"use strict";

var _inherits = function (child, parent) {
  child.prototype = Object.create(parent && parent.prototype, {
    constructor: {
      value: child,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (parent) child.__proto__ = parent;
};

var _interopRequire = function (obj) {
  return obj && (obj["default"] || obj);
};

var Block = _interopRequire(require("./block"));

var Ruleset = function Ruleset(sel, decs) {
  this.sel = sel;
  this.decs = decs;
};

_inherits(Ruleset, Block);

Ruleset.prototype.serialize = function () {
  var decs = this.decs;
  var str = "";
  for (var key in decs) {
    if (str.length) str += ";";
    str += "" + key + ":" + decs[key];
  }
  return "" + this.sel + "{" + str + "}";
};

module.exports = Ruleset;


},{"./block":9}],13:[function(require,module,exports){
"use strict";

var _inherits = function (child, parent) {
  child.prototype = Object.create(parent && parent.prototype, {
    constructor: {
      value: child,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (parent) child.__proto__ = parent;
};

var _interopRequire = function (obj) {
  return obj && (obj["default"] || obj);
};

var Block = _interopRequire(require("./block"));

var Ruleset = _interopRequire(require("./ruleset"));

var Scope = function Scope() {
  this.children = [];
};

_inherits(Scope, Block);

Scope.prototype.add = function (sel, decs) {
  if (sel instanceof Block) {
    this.children.push(sel);
  } else {
    var rule = new Ruleset(sel, decs);
    this.children.push(rule);
  }
  return this;
};

Scope.prototype.remove = function (dec) {
  this.children = this.children.filter(function (v) {
    return dec == v;
  });
};

Scope.prototype.serialize = function () {
  return this.children.map(function (child) {
    return child.serialize();
  }).join("");
};

module.exports = Scope;


},{"./block":9,"./ruleset":12}],14:[function(require,module,exports){
"use strict";

var _inherits = function (child, parent) {
  child.prototype = Object.create(parent && parent.prototype, {
    constructor: {
      value: child,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (parent) child.__proto__ = parent;
};

var _interopRequire = function (obj) {
  return obj && (obj["default"] || obj);
};

var Scope = _interopRequire(require("./scope"));

var Media = _interopRequire(require("./media"));

var Animation = _interopRequire(require("./animation"));

var Sheet = function Sheet() {
  if (Scope) {
    Scope.apply(this, arguments);
  }
};

_inherits(Sheet, Scope);

Sheet.prototype.anim = function (name, frames, serializePrefixes) {
  var anim = new Animation(name, serializePrefixes);
  for (var i in frames) {
    anim.add(i, frames[i]);
  }
  this.add(anim);
  return anim;
};

Sheet.prototype.media = function (params) {
  var _media = new Media(params);
  this.add(_media);
  return _media;
};

module.exports = Sheet;


},{"./animation":8,"./media":11,"./scope":13}],15:[function(require,module,exports){
/**
 * This file automatically generated from `build.js`.
 * Do not manually edit.
 */

module.exports = [
  "area",
  "base",
  "br",
  "col",
  "embed",
  "hr",
  "img",
  "input",
  "keygen",
  "link",
  "menuitem",
  "meta",
  "param",
  "source",
  "track",
  "wbr"
];

},{}]},{},[2])(2)
});